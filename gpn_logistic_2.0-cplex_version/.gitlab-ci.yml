image: gitlab.dellin.ru:5005/omoim_developers/ceylondockerindocker:1.3.3.10

stages:
  - build

# build project and its dependencies
# ---------------------------------------------------------------------
build-cplex-version:
  only:
   - cplex_version
  stage: build
#   cache:
#     paths:
#      - modules/
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker build --tag new-image .
    - docker tag new-image ${CI_REGISTRY_IMAGE}:latest
    - docker tag new-image ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:latest
    - docker rmi ${CI_REGISTRY_IMAGE}:latest
    - docker pull ${CI_REGISTRY_IMAGE}:latest
    - docker rmi ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - IMAGE_NAME=${CI_REGISTRY_IMAGE}/parallela/cplex_version
    - IMAGE_VERSION=$(date +"%Y-%m-%d_%H-%m")
    - docker build -f Dockerfile_parallela -t ${IMAGE_NAME}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME}:${IMAGE_VERSION} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME}:latest

build-cplex-preprod:
  only:
   - cplex_preprod
  stage: build
#   cache:
#     paths:
#      - modules/
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker build --tag new-image .
    - docker tag new-image ${CI_REGISTRY_IMAGE}:preprod
    - docker tag new-image ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:preprod
    - docker rmi ${CI_REGISTRY_IMAGE}:preprod
    - docker pull ${CI_REGISTRY_IMAGE}:preprod
    - docker rmi ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - IMAGE_NAME=${CI_REGISTRY_IMAGE}/parallela/cplex_preprod
    - IMAGE_VERSION=$(date +"%Y-%m-%d_%H-%m")
    - docker build -f Dockerfile_parallela -t ${IMAGE_NAME}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME}:${IMAGE_VERSION} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME}:latest

build-cplex-test:
  only:
   - cplex_test
  stage: build
#   cache:
#     paths:
#      - modules/
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker build --tag new-image .
    - docker tag new-image ${CI_REGISTRY_IMAGE}:test
    - docker tag new-image ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:test
    - docker rmi ${CI_REGISTRY_IMAGE}:test
    - docker pull ${CI_REGISTRY_IMAGE}:test
    - docker rmi ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - IMAGE_NAME=${CI_REGISTRY_IMAGE}/parallela/cplex_test
    - IMAGE_VERSION=$(date +"%Y-%m-%d_%H-%m")
    - docker build -f Dockerfile_parallela -t ${IMAGE_NAME}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME}:${IMAGE_VERSION} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME}:latest

build-cplex-prod:
  only:
   - cplex_prod
  stage: build
#   cache:
#     paths:
#      - modules/
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_BUILD_TOKEN} ${CI_REGISTRY}
  script:
    - docker build --tag new-image .
    - docker tag new-image ${CI_REGISTRY_IMAGE}:prod
    - docker tag new-image ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker push ${CI_REGISTRY_IMAGE}:prod
    - docker rmi ${CI_REGISTRY_IMAGE}:prod
    - docker pull ${CI_REGISTRY_IMAGE}:prod
    - docker rmi ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - docker pull ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}
    - IMAGE_NAME=${CI_REGISTRY_IMAGE}/parallela/cplex_prod
    - IMAGE_VERSION=$(date +"%Y-%m-%d_%H-%m")
    - docker build -f Dockerfile_parallela -t ${IMAGE_NAME}:${IMAGE_VERSION} .
    - docker tag ${IMAGE_NAME}:${IMAGE_VERSION} ${IMAGE_NAME}:latest
    - docker push ${IMAGE_NAME}:${IMAGE_VERSION}
    - docker push ${IMAGE_NAME}:latest